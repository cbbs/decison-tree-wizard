{"version":3,"sources":["svg/logo.svg","api/cpaQuestions.js","components/Question.js","components/AnswerOption.js","components/Quiz.js","components/Result.js","App.js","index.js"],"names":["module","exports","cpaQuestions","id","question","buttons","label","target","Question","props","className","content","AnswerOption","type","answerTarget","value","disabled","answer","onClick","onAnswerSelected","answerLabel","Quiz","component","transitionName","transitionEnterTimeout","transitionLeaveTimeout","transitionAppear","transitionAppearTimeout","key","questionId","answerOptions","map","Result","quizResult","App","state","counter","answersCount","result","handleAnswerSelected","bind","this","setState","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","event","setUserAnswer","currentTarget","getAttribute","find","obj","answers","answersCountKeys","Object","keys","answersCountValues","maxAnswerCount","max","apply","filter","questionTotal","renderResult","renderQuiz","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a7fbd43e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.84287d09.svg\";","var cpaQuestions = [\n  {\n      id: \"start\",\n      question: \"How Does the CCPA Apply to You?\",\n      buttons: [\n          {\n              label: \"Are you a business?\",\n              target: \"business\"\n          },\n          {\n              label: \"Are you a service provider?\",\n              target: \"service-provider\"\n          }\n      ]\n  },\n  {\n      id: \"business\",\n      question: \"For-profit legal entity?\",\n      buttons: [\n          {\n              label: \"Yes\",\n              target: \"start\"\n          },\n          {\n              label: \"No\",\n              target: \"service-provider\"\n          }\n      ]\n  },\n  {\n      id: \"service-provider\",\n      question: \"Process personal information of CA resident (e.g., name, email, IP address, device identifiers) on behalf of a business, per a written contract with specific data use limitations.\",\n      buttons: [\n          {\n              label: \"Yes\",\n              target: \"business\"\n          },\n          {\n              label: \"No\",\n              target: \"start\"\n          }\n      ]\n  },\n];\n\nexport default cpaQuestions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Question(props) {\n  return <h3 className=\"question\">{props.content}</h3>;\n}\n\nQuestion.propTypes = {\n  content: PropTypes.string.isRequired\n};\n\nexport default Question;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction AnswerOption(props) {\n  return (\n    <li className=\"answerOption\">\n      <a\n        type=\"button\"\n        className=\"answerButton\"\n        id={props.answerTarget}\n        value={props.answerTarget}\n        disabled={props.answer}\n        onClick={props.onAnswerSelected}\n      >{props.answerLabel}</a>\n    </li>\n  );\n}\n\nAnswerOption.propTypes = {\n  answerTarget: PropTypes.string.isRequired,\n  answerLabel: PropTypes.string.isRequired,\n  answer: PropTypes.string.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\n\nexport default AnswerOption;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport Question from '../components/Question';\nimport AnswerOption from '../components/AnswerOption';\n\nfunction Quiz(props) {\n  function renderAnswerOptions(key) {\n    return (\n      <AnswerOption\n        key={key.content}\n        answerTarget={key.target}\n        answerLabel={key.label}\n        answer={props.answer}\n        questionId={props.questionId}\n        onAnswerSelected={props.onAnswerSelected}\n      />\n    );\n  }\n\n  return (\n    <CSSTransitionGroup\n      className=\"container\"\n      component=\"div\"\n      transitionName=\"fade\"\n      transitionEnterTimeout={800}\n      transitionLeaveTimeout={500}\n      transitionAppear\n      transitionAppearTimeout={500}\n    >\n      <div key={props.questionId}>\n        <Question content={props.question} />\n        <ul className=\"answerOptions\">\n          {props.answerOptions.map(renderAnswerOptions)}\n        </ul>\n      </div>\n    </CSSTransitionGroup>\n  );\n}\n\nQuiz.propTypes = {\n  answer: PropTypes.string.isRequired,\n  answerOptions: PropTypes.array.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\n\nexport default Quiz;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransitionGroup } from 'react-transition-group';\n\nfunction Result(props) {\n  return (\n    <CSSTransitionGroup\n      className=\"container result\"\n      component=\"div\"\n      transitionName=\"fade\"\n      transitionEnterTimeout={800}\n      transitionLeaveTimeout={500}\n      transitionAppear\n      transitionAppearTimeout={500}\n    >\n      <div>\n        You prefer <strong>{props.quizResult}</strong>!\n      </div>\n    </CSSTransitionGroup>\n  );\n}\n\nResult.propTypes = {\n  quizResult: PropTypes.string.isRequired\n};\n\nexport default Result;\n","import React, { Component } from 'react';\nimport cpaQuestions from './api/cpaQuestions';\nimport Quiz from './components/Quiz';\nimport Result from './components/Result';\nimport logo from './svg/logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      counter: 0,\n      questionId: 1,\n      question: '',\n      answerOptions: [],\n      answer: '',\n      answersCount: {},\n      result: ''\n    };\n\n    this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      question: cpaQuestions[0].question,\n      answerOptions: cpaQuestions[0].buttons\n    });\n  }\n\n  shuffleArray(array) {\n    var currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  }\n\n  handleAnswerSelected(event) {\n    this.setUserAnswer(event.currentTarget.getAttribute('value'));\n\n    let target = cpaQuestions.find(obj => {\n      return obj.id === event.currentTarget.getAttribute('value')\n    })\n\n    this.setState({\n      counter: 1,\n      questionId: 1,\n      question: target.question,\n      answerOptions: target.buttons,\n      answer: ''\n    });\n\n    // if (this.state.questionId < cpaQuestions.length) {\n    //   setTimeout(() => this.setNextQuestion(), 300);\n    // } else {\n    //   setTimeout(() => this.setResults(this.getResults()), 300);\n    // }\n  }\n\n  setUserAnswer(answer) {\n    this.setState((state, props) => ({\n      answersCount: {\n        ...state.answersCount,\n        [answer]: (state.answersCount[answer] || 0) + 1\n      },\n      answer: answer\n    }));\n  }\n\n  setNextQuestion() {\n    const counter = this.state.counter + 1;\n    const questionId = this.state.questionId + 1;\n\n    this.setState({\n      counter: counter,\n      questionId: questionId,\n      question: cpaQuestions[counter].question,\n      answerOptions: cpaQuestions[counter].answers,\n      answer: ''\n    });\n  }\n\n  getResults() {\n    const answersCount = this.state.answersCount;\n    const answersCountKeys = Object.keys(answersCount);\n    const answersCountValues = answersCountKeys.map(key => answersCount[key]);\n    const maxAnswerCount = Math.max.apply(null, answersCountValues);\n\n    return answersCountKeys.filter(key => answersCount[key] === maxAnswerCount);\n  }\n\n  setResults(result) {\n    if (result.length === 1) {\n      this.setState({ result: result[0] });\n    } else {\n      this.setState({ result: 'Undetermined' });\n    }\n  }\n\n  renderQuiz() {\n    return (\n      <div>\n        <Quiz\n          answer={this.state.answer}\n          answerOptions={this.state.answerOptions}\n          questionId={this.state.questionId}\n          question={this.state.question}\n          questionTotal={cpaQuestions.length}\n          onAnswerSelected={this.handleAnswerSelected}\n        />\n        &nbsp;&nbsp;&nbsp;\n        {/* <a onClick={this.handleAnswerSelected} value={'start'}>&lt;&nbsp;Back</a>\n        &nbsp;&nbsp;&nbsp; */}\n        <a onClick={this.handleAnswerSelected} value={'start'}>Reset</a>\n      </div>\n    );\n  }\n\n  renderResult() {\n    return <Result quizResult={this.state.result} />;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.result ? this.renderResult() : this.renderQuiz()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('ccpa-component-root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}