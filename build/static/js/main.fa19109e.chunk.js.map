{"version":3,"sources":["components/Question.js","components/AnswerOption.js","components/Quiz.js","App.js","index.js"],"names":["Question","props","className","dangerouslySetInnerHTML","__html","content","AnswerOption","id","answerTarget","onClick","e","preventDefault","onAnswerSelected","answerLabel","Quiz","renderAnswerOption","key","index","target","label","notes","questionId","component","transitionName","transitionEnterTimeout","transitionLeaveTimeout","transitionAppear","transitionAppearTimeout","question","answerOptions","map","renderAnswerOptions","App","questions","window","decisionTreeWizard","data","state","counter","prevQuestions","handleAnswerSelected","bind","this","find","obj","findQuestion","setState","buttons","push","length","pop","componentDidMount","that","questionTotal","handleBack","handleReset","renderQuiz","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fa19109e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Question(props) {\n  return <p className=\"question\" dangerouslySetInnerHTML={{__html: props.content}}></p>;\n}\n\nQuestion.propTypes = {\n  content: PropTypes.string.isRequired\n};\n\nexport default Question;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction AnswerOption(props) {\n  function handleClick(e) {\n    e.preventDefault();\n    props.onAnswerSelected(props.answerTarget)\n  }\n\n  return (\n    <span className=\"view_more\">\n      <button\n        className=\"toggleExpand buttonToggle cpa_option\"\n        id={props.answerTarget}\n        onClick={handleClick}>\n        {props.answerLabel}</button>\n    </span>\n  );\n}\n\nAnswerOption.propTypes = {\n  answerTarget: PropTypes.string.isRequired,\n  answerLabel: PropTypes.string.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\n\nexport default AnswerOption;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport Question from '../components/Question';\nimport AnswerOption from '../components/AnswerOption';\n\nfunction Quiz(props) {\n  function renderAnswerOption(key, index) {\n    return (\n      <AnswerOption\n        key={index}\n        answerTarget={key.target}\n        answerLabel={key.label}\n        notes={props.notes}\n        questionId={props.questionId}\n        onAnswerSelected={props.onAnswerSelected}\n      />\n    );\n  }\n\n  function renderAnswerOptions(question) {\n    if(props.answerOptions) {\n      return (\n        <div className=\"answer_options\">\n        {props.answerOptions.map(renderAnswerOption)}\n      </div>\n      )\n    }\n  }\n\n  return (\n    <CSSTransitionGroup\n      className=\"cpa_container\"\n      component=\"div\"\n      transitionName=\"fade\"\n      transitionEnterTimeout={800}\n      transitionLeaveTimeout={500}\n      transitionAppear\n      transitionAppearTimeout={500}\n    >\n      <div key={props.questionId}>\n        <Question content={props.question} />\n        {renderAnswerOptions()}\n        {props.notes}\n      </div>\n    </CSSTransitionGroup>\n  );\n}\n\nQuiz.propTypes = {\n  answerOptions: PropTypes.array.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.string.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\n\nexport default Quiz;\n","import React, { Component } from 'react';\n// import cpaQuestions from './api/cpaQuestions';\nimport Quiz from './components/Quiz';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.questions = window.decisionTreeWizard.data;\n\n    this.state = {\n      counter: 0,\n      questionId: 'start',\n      prevQuestions: [],\n      question: '',\n      answerOptions: [],\n      notes: ''\n    };\n    this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\n  }\n\n  findQuestion(questionId) {\n    return this.questions.find(obj => {\n      return obj.id === questionId\n    })\n  }\n\n  componentDidMount() {\n    const target = this.findQuestion('start');\n\n    this.setState({\n      questionId: 'start',\n      question: target.question,\n      answerOptions: target.buttons,\n      notes: target.notes ? target.notes : ''\n    });\n  }\n\n  handleAnswerSelected(questionId) {\n    let target = this.findQuestion(questionId);\n    const prevQuestions = [...this.state.prevQuestions];\n    prevQuestions.push(this.state.questionId);\n    this.setState({\n      counter: this.state.counter + 1,\n      questionId: questionId,\n      prevQuestions: prevQuestions,\n      question: target.question,\n      answerOptions: target.buttons,\n      notes: target.notes\n    });\n  }\n\n  handleBack() {\n    let questionId = 'start';\n    let prevQuestions = [];\n    let counter = this.state.counter;\n    if (this.state.prevQuestions.length) {\n      prevQuestions = [...this.state.prevQuestions];\n      questionId = prevQuestions.pop();\n      counter--;\n    }\n    let target = this.findQuestion(questionId);\n    this.setState({\n      counter: counter,\n      questionId: questionId,\n      prevQuestions: prevQuestions,\n      question: target.question,\n      answerOptions: target.buttons,\n      notes: target.notes\n    });\n  }\n\n  handleReset() {\n    this.setState({\n      counter: 0,\n      prevQuestions: []\n    });\n    this.componentDidMount();\n  }\n\n  renderQuiz() {\n    const that = this;\n    function reset(e) {\n      e.preventDefault();\n      that.handleReset('start');\n    }\n    function back(e) {\n      e.preventDefault();\n      that.handleBack();\n    }\n\n    return (\n      <div>\n        <Quiz\n          notes={this.state.notes}\n          answerOptions={this.state.answerOptions}\n          questionId={this.state.questionId}\n          question={this.state.question}\n          questionTotal={this.questions.length}\n          onAnswerSelected={this.handleAnswerSelected}\n        />\n        <div className=\"cpa_bottom\">\n        <button onClick={back} className=\"toggleExpand\">&lt;&nbsp;Back</button>\n        <button onClick={reset} className=\"toggleExpand\">Reset</button>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"cpa_app\">\n        {this.renderQuiz()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('ccpa-component-root'));"],"sourceRoot":""}