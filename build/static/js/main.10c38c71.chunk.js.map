{"version":3,"sources":["api/cpaQuestions.js","components/Question.js","components/AnswerOption.js","components/Quiz.js","App.js","index.js"],"names":["cpaQuestions","id","question","buttons","label","target","notes","Question","props","className","dangerouslySetInnerHTML","__html","content","AnswerOption","answerTarget","onClick","e","preventDefault","onAnswerSelected","answerLabel","Quiz","renderAnswerOption","key","index","questionId","component","transitionName","transitionEnterTimeout","transitionLeaveTimeout","transitionAppear","transitionAppearTimeout","answerOptions","map","renderAnswerOptions","App","state","counter","prevQuestions","handleAnswerSelected","bind","find","obj","this","findQuestion","setState","push","length","pop","componentDidMount","that","questionTotal","handleBack","handleReset","renderQuiz","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.10c38c71.chunk.js","sourcesContent":["var cpaQuestions = [\n    {\n        id: \"start\",\n        question: \"How Does the CCPA Apply to You?\",\n        buttons: [\n            {\n                label: \"Are you a business?\",\n                target: \"business\"\n            },\n            {\n                label: \"Are you a service provider?\",\n                target: \"service-provider\"\n            }\n        ]\n    },\n    {\n        id: \"business\",\n        question: \"For-profit legal entity?\",\n        buttons: [\n            {\n                label: \"Yes\",\n                target: \"personal-info\"\n            },\n            {\n                label: \"No\",\n                target: \"service-provider\"\n            }\n        ]\n    },\n    {\n        id: \"personal-info\",\n        question: \"Collect personal information of CA resident, or on the behalf of which personal information is collected\",\n        notes: \"(e.g., name, email, IP address, device identifiers)\",\n        buttons: [\n            {\n                label: \"Yes\",\n                target: \"purpose-means\"\n            },\n            {\n                label: \"No\",\n                target: \"service-provider\"\n            }\n        ]\n    },\n    {\n        id: \"purpose-means\",\n        question: \"Determine (alone or jointly) purpose and means of the processing of CA resident PI\",\n        buttons: [\n            {\n                label: \"Yes\",\n                target: \"ca-business\"\n            },\n            {\n                label: \"No\",\n                target: \"service-provider\"\n            }\n        ]\n    },\n    {\n        id: \"ca-business\",\n        question: \"Do business in CA\",\n        buttons: [\n            {\n                label: \"Yes\",\n                target: \"revenue-size\"\n            },\n            {\n                label: \"No\",\n                target: \"service-provider\"\n            }\n        ]\n    },\n    {\n        id: \"revenue-size\",\n        question: \"Satisfy <u>one</u> of the following: <br />(A) Annual gross revenue > $25 million;<br />(B) Annually buy, receive, sell or share personal information of ≥ 50,000 CA residents; or <br />(C) ≥ 50% annual revenue comes from selling CA residents' personal information\",\n        buttons: [\n            {\n                label: \"Yes\",\n                target: \"resident-type\"\n            },\n            {\n                label: \"No\",\n                target: \"service-provider\"\n            }\n        ]\n    },\n    {\n        id: \"resident-type\",\n        question: \"What type of CA resident do you collect PI about?\",\n        buttons: [\n            {\n                label: \"(A) B2B Contacts\",\n                target: \"limited-ccpa\"\n            },\n            {\n                label: \"(B) Employee/Applicant/Contractor/Owner/Officer/ Director/ Medical staff\",\n                target: \"limited-ccpa\"\n            },\n            {\n                label: \"(C) Traditional Consumer\",\n                target: \"pi-use\"\n            }\n        ]\n    },\n    {\n        id: \"pi-use\",\n        question: \"What do you do with the PI that you collect?\",\n        buttons: [\n            {\n                label: \"(A) Use PI internally only\",\n                target: \"ccpa-baseline\"\n            },\n            {\n                label: \"(B) Disclose PI for business purposes\",\n                target: \"ccpa-baseline\"\n            },\n            {\n                label: \"(C) Sell PI (Share for value)\",\n                target: \"ccpa-heightened\"\n            }\n        ]\n    },\n    {\n        id: \"service-provider\",\n        question: \"For Profit legal entity\",\n        buttons: [\n            {\n                label: \"Yes\",\n                target: \"sp-personal-info\"\n            },\n            {\n                label: \"No\",\n                target: \"non-applicable\"\n            }\n        ]\n    },\n    {\n        id: \"sp-personal-info\",\n        question: \"Process personal information of CA resident on behalf of a business, per a written contract with specific data use limitations.\",\n        notes: \"(e.g., name, email, IP address, device identifiers)\",\n        buttons: [\n            {\n                label: \"Yes\",\n                target: \"sp-ca-business\"\n            },\n            {\n                label: \"No\",\n                target: \"non-applicable\"\n            }\n        ]\n    },\n    {\n        id: \"sp-ca-business\",\n        question: \"Do business in CA\",\n        buttons: [\n            {\n                label: \"Yes\",\n                target: \"limited-ccpa\"\n            },\n            {\n                label: \"No\",\n                target: \"non-applicable\"\n            }\n        ]\n    },\n    {\n        id: \"limited-ccpa\",\n        question: \"Limited CCPA provisions may apply, but should consult with counsel.\"\n    },\n    {\n        id: \"non-applicable\",\n        question: \"CCPA likely does not apply, but should confirm with counsel.\"\n    },\n    {\n        id: \"ccpa-baseline\",\n        question: \"CCPA Baseline Applies\"\n    },\n    {\n        id: \"ccpa-heightened\",\n        question: \"CCPA Heightened Applies\"\n    }\n];\n\nexport default cpaQuestions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Question(props) {\n  return <p className=\"question\" dangerouslySetInnerHTML={{__html: props.content}}></p>;\n}\n\nQuestion.propTypes = {\n  content: PropTypes.string.isRequired\n};\n\nexport default Question;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction AnswerOption(props) {\n  function handleClick(e) {\n    e.preventDefault();\n    props.onAnswerSelected(props.answerTarget)\n  }\n\n  return (\n    <span className=\"view_more\">\n      <button\n        className=\"toggleExpand buttonToggle cpa_option\"\n        id={props.answerTarget}\n        onClick={handleClick}>\n        {props.answerLabel}</button>\n    </span>\n  );\n}\n\nAnswerOption.propTypes = {\n  answerTarget: PropTypes.string.isRequired,\n  answerLabel: PropTypes.string.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\n\nexport default AnswerOption;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport Question from '../components/Question';\nimport AnswerOption from '../components/AnswerOption';\n\nfunction Quiz(props) {\n  function renderAnswerOption(key, index) {\n    return (\n      <AnswerOption\n        key={index}\n        answerTarget={key.target}\n        answerLabel={key.label}\n        notes={props.notes}\n        questionId={props.questionId}\n        onAnswerSelected={props.onAnswerSelected}\n      />\n    );\n  }\n\n  function renderAnswerOptions(question) {\n    if(props.answerOptions) {\n      return (\n        <div className=\"answer_options\">\n        {props.answerOptions.map(renderAnswerOption)}\n      </div>\n      )\n    }\n  }\n\n  return (\n    <CSSTransitionGroup\n      className=\"cpa_container\"\n      component=\"div\"\n      transitionName=\"fade\"\n      transitionEnterTimeout={800}\n      transitionLeaveTimeout={500}\n      transitionAppear\n      transitionAppearTimeout={500}\n    >\n      <div key={props.questionId}>\n        <Question content={props.question} />\n        {renderAnswerOptions()}\n        {props.notes}\n      </div>\n    </CSSTransitionGroup>\n  );\n}\n\nQuiz.propTypes = {\n  answerOptions: PropTypes.array.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.string.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\n\nexport default Quiz;\n","import React, { Component } from 'react';\nimport cpaQuestions from './api/cpaQuestions';\nimport Quiz from './components/Quiz';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      counter: 0,\n      questionId: 'start',\n      prevQuestions: [],\n      question: '',\n      answerOptions: [],\n      notes: ''\n    };\n    this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\n  }\n\n  findQuestion(questionId) {\n    return cpaQuestions.find(obj => {\n      return obj.id === questionId\n    })\n  }\n\n  componentDidMount() {\n    const target = this.findQuestion('start');\n\n    this.setState({\n      questionId: 'start',\n      question: target.question,\n      answerOptions: target.buttons,\n      notes: target.notes ? target.notes : ''\n    });\n  }\n\n  handleAnswerSelected(questionId) {\n    let target = this.findQuestion(questionId);\n    const prevQuestions = [...this.state.prevQuestions];\n    prevQuestions.push(this.state.questionId);\n    this.setState({\n      counter: this.state.counter + 1,\n      questionId: questionId,\n      prevQuestions: prevQuestions,\n      question: target.question,\n      answerOptions: target.buttons,\n      notes: target.notes\n    });\n  }\n\n  handleBack() {\n    let questionId = 'start';\n    let prevQuestions = [];\n    let counter = this.state.counter;\n    if (this.state.prevQuestions.length) {\n      prevQuestions = [...this.state.prevQuestions];\n      questionId = prevQuestions.pop();\n      counter--;\n    }\n    let target = this.findQuestion(questionId);\n    this.setState({\n      counter: counter,\n      questionId: questionId,\n      prevQuestions: prevQuestions,\n      question: target.question,\n      answerOptions: target.buttons,\n      notes: target.notes\n    });\n  }\n\n  handleReset() {\n    this.setState({\n      counter: 0,\n      prevQuestions: []\n    });\n    this.componentDidMount();\n  }\n\n  renderQuiz() {\n    const that = this;\n    function reset(e) {\n      e.preventDefault();\n      that.handleReset('start');\n    }\n    function back(e) {\n      e.preventDefault();\n      that.handleBack();\n    }\n\n    return (\n      <div>\n        <Quiz\n          notes={this.state.notes}\n          answerOptions={this.state.answerOptions}\n          questionId={this.state.questionId}\n          question={this.state.question}\n          questionTotal={cpaQuestions.length}\n          onAnswerSelected={this.handleAnswerSelected}\n        />\n        <div className=\"cpa_bottom\">\n        <button onClick={back} className=\"toggleExpand\">&lt;&nbsp;Back</button>\n        <button onClick={reset} className=\"toggleExpand\">Reset</button>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"cpa_app\">\n        {this.renderQuiz()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('ccpa-component-root'));"],"sourceRoot":""}